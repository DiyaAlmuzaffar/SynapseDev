{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "notmanagedsynapse"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureDataLakeStorage3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureMLService1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService1'"
		},
		"AzureMLService2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService2'"
		},
		"AzureMLService3_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService3'"
		},
		"AzureMLService4_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService4'"
		},
		"AzureMLService5_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService5'"
		},
		"DiyaInternalStroageByUsingAccountKey_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DiyaInternalStroageByUsingAccountKey'"
		},
		"cosmosdblink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cosmosdblink'"
		},
		"notmanagedsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'notmanagedsynapse-WorkspaceDefaultSqlServer'"
		},
		"restidentity_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'restidentity'"
		},
		"verifypermission_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'verifypermission'"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://testdlfs.blob.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testdlfs.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://zerostroage.dfs.core.windows.net"
		},
		"AzureDataLakeStorage3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://diyastorageinternal.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://diyamlkeyvault.vault.azure.net/"
		},
		"AzureKeyVault2_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://diyastoragekeyvault.vault.azure.net/"
		},
		"AzureKeyVault3_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://diyastoragekeyvault.vault.azure.net/"
		},
		"AzureMLService1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b52e0335-cc92-47a1-b234-38bd35c2750d"
		},
		"AzureMLService1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "adwrg"
		},
		"AzureMLService1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "0c99dec6-5f5a-4a6b-9d0c-d9c8ddd08e52"
		},
		"AzureMLService1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureMLService2_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b52e0335-cc92-47a1-b234-38bd35c2750d"
		},
		"AzureMLService2_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "adwrg"
		},
		"AzureMLService2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "5b363489-386b-406d-abb7-fa38d2ad79f4"
		},
		"AzureMLService2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureMLService3_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b52e0335-cc92-47a1-b234-38bd35c2750d"
		},
		"AzureMLService3_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "adwrg"
		},
		"AzureMLService3_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "48927e34-c372-42a1-b3e0-6706082fd7a7"
		},
		"AzureMLService3_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureMLService4_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b52e0335-cc92-47a1-b234-38bd35c2750d"
		},
		"AzureMLService4_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "adwrg"
		},
		"AzureMLService4_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "48927e34-c372-42a1-b3e0-6706082fd7a7"
		},
		"AzureMLService4_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"AzureMLService5_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b52e0335-cc92-47a1-b234-38bd35c2750d"
		},
		"AzureMLService5_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "adwrg"
		},
		"AzureMLService5_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "fefbf1d3-93df-4056-b161-11226e35e941"
		},
		"AzureMLService5_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"diyaintgenralstoragelink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://diyastorageinternal.dfs.core.windows.net"
		},
		"notmanagedsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://diyastorageinternal.dfs.core.windows.net"
		},
		"restidentity_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://management.azure.com/subscriptions/b52e0335-cc92-47a1-b234-38bd35c2750d/resourceGroups/adwrg/providers/Microsoft.Synapse/workspaces/notmanagedsynapse/sqlPools/testdata/recommendedSensitivityLabels?api-version=2019-06-01-preview"
		},
		"restidentity_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "48927e34-c372-42a1-b3e0-6706082fd7a7"
		},
		"restidentity_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"restidentity_properties_typeProperties_aadResourceId": {
			"type": "string",
			"defaultValue": "https://management.azure.com/"
		},
		"testwithmah_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://diyastorageinternal.dfs.core.windows.net"
		},
		"verifypermission_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://viewpermissions.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Machine Learning Execute Pipeline1",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"continueOnStepFailure": true,
							"mlPipelineId": "f9c0263d-3059-4378-9d98-abd8c1a3fc4d"
						},
						"linkedServiceName": {
							"referenceName": "AzureMLService3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-11T20:12:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureMLService3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 3')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Machine Learning Execute Pipeline1",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"mlPipelineId": {
								"value": "ddd0869e-d9e7-4028-8c00-df1b1621abd1",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureMLService3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-25T07:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureMLService3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 4')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-06T22:04:30Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "notmanagedsynapse-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "testpoolneruope"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/notmanagedsynapse-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "diyaintgenralstoragelink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-31c38df8-0ade-4e4c-8b87-287655263f9d.c000.snappy.parquet",
						"folderPath": "parquet",
						"fileSystem": "cont01"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "INT64"
					},
					{
						"name": "PaketId",
						"type": "INT64"
					},
					{
						"name": "Eventcode",
						"type": "INT32"
					},
					{
						"name": "Timestamp",
						"type": "UTF8"
					},
					{
						"name": "Sscc",
						"type": "UTF8"
					},
					{
						"name": "EreignisFiliale",
						"type": "INT32"
					},
					{
						"name": "EreignisFahrzeug",
						"type": "DECIMAL",
						"precision": 12,
						"scale": 4
					},
					{
						"name": "Benutzer",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 7,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 8,
						"scale": 5
					},
					{
						"name": "GeoCheck",
						"type": "UTF8"
					},
					{
						"name": "Auslieferstatus",
						"type": "UTF8"
					},
					{
						"name": "Quittungsgeber",
						"type": "UTF8"
					},
					{
						"name": "RegalNr",
						"type": "UTF8"
					},
					{
						"name": "RasterVon",
						"type": "UTF8"
					},
					{
						"name": "RasterBis",
						"type": "UTF8"
					},
					{
						"name": "Laenge",
						"type": "INT32"
					},
					{
						"name": "Breite",
						"type": "INT32"
					},
					{
						"name": "Hoehe",
						"type": "INT32"
					},
					{
						"name": "Gewicht",
						"type": "DECIMAL",
						"precision": 20,
						"scale": 3
					},
					{
						"name": "StatusWaage",
						"type": "UTF8"
					},
					{
						"name": "StatusScanner",
						"type": "UTF8"
					},
					{
						"name": "StatusAllgemein",
						"type": "UTF8"
					},
					{
						"name": "FahrzeugId",
						"type": "UTF8"
					},
					{
						"name": "RegalTyp",
						"type": "INT32"
					},
					{
						"name": "TourNr",
						"type": "INT64"
					},
					{
						"name": "TourDatum",
						"type": "UTF8"
					},
					{
						"name": "PtsSyncedAt",
						"type": "UTF8"
					},
					{
						"name": "AuftragId",
						"type": "INT64"
					},
					{
						"name": "Bemerkungen",
						"type": "UTF8"
					},
					{
						"name": "BoxBarcode",
						"type": "UTF8"
					},
					{
						"name": "SignatureRefused",
						"type": "BOOLEAN"
					},
					{
						"name": "EventSource",
						"type": "UTF8"
					},
					{
						"name": "Stellplatz",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "UTF8"
					},
					{
						"name": "Grund",
						"type": "UTF8"
					},
					{
						"name": "CrossdockingNr",
						"type": "UTF8"
					},
					{
						"name": "BehaelterNr",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/diyaintgenralstoragelink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testwithmah",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-31c38df8-0ade-4e4c-8b87-287655263f9d.c000.snappy.parquet",
						"folderPath": "parquet",
						"fileSystem": "cont01"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "INT64"
					},
					{
						"name": "PaketId",
						"type": "INT64"
					},
					{
						"name": "Eventcode",
						"type": "INT32"
					},
					{
						"name": "Timestamp",
						"type": "UTF8"
					},
					{
						"name": "Sscc",
						"type": "UTF8"
					},
					{
						"name": "EreignisFiliale",
						"type": "INT32"
					},
					{
						"name": "EreignisFahrzeug",
						"type": "DECIMAL",
						"precision": 12,
						"scale": 4
					},
					{
						"name": "Benutzer",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 7,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 8,
						"scale": 5
					},
					{
						"name": "GeoCheck",
						"type": "UTF8"
					},
					{
						"name": "Auslieferstatus",
						"type": "UTF8"
					},
					{
						"name": "Quittungsgeber",
						"type": "UTF8"
					},
					{
						"name": "RegalNr",
						"type": "UTF8"
					},
					{
						"name": "RasterVon",
						"type": "UTF8"
					},
					{
						"name": "RasterBis",
						"type": "UTF8"
					},
					{
						"name": "Laenge",
						"type": "INT32"
					},
					{
						"name": "Breite",
						"type": "INT32"
					},
					{
						"name": "Hoehe",
						"type": "INT32"
					},
					{
						"name": "Gewicht",
						"type": "DECIMAL",
						"precision": 20,
						"scale": 3
					},
					{
						"name": "StatusWaage",
						"type": "UTF8"
					},
					{
						"name": "StatusScanner",
						"type": "UTF8"
					},
					{
						"name": "StatusAllgemein",
						"type": "UTF8"
					},
					{
						"name": "FahrzeugId",
						"type": "UTF8"
					},
					{
						"name": "RegalTyp",
						"type": "INT32"
					},
					{
						"name": "TourNr",
						"type": "INT64"
					},
					{
						"name": "TourDatum",
						"type": "UTF8"
					},
					{
						"name": "PtsSyncedAt",
						"type": "UTF8"
					},
					{
						"name": "AuftragId",
						"type": "INT64"
					},
					{
						"name": "Bemerkungen",
						"type": "UTF8"
					},
					{
						"name": "BoxBarcode",
						"type": "UTF8"
					},
					{
						"name": "SignatureRefused",
						"type": "BOOLEAN"
					},
					{
						"name": "EventSource",
						"type": "UTF8"
					},
					{
						"name": "Stellplatz",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "UTF8"
					},
					{
						"name": "Grund",
						"type": "UTF8"
					},
					{
						"name": "CrossdockingNr",
						"type": "UTF8"
					},
					{
						"name": "BehaelterNr",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/testwithmah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestResource1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "restidentity",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/restidentity')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage3_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDatabricks1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5027133204630198.18.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "0427-073639-wings916"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault2_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault3_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService1_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "mlworkspace",
					"servicePrincipalId": "[parameters('AzureMLService1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService1_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService2_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService2_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "mlworkspace",
					"servicePrincipalId": "[parameters('AzureMLService2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService2_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService2_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService3_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService3_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "mlworkspace",
					"servicePrincipalId": "[parameters('AzureMLService3_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService3_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService3_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService4')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService4_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService4_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "mlworkspace",
					"servicePrincipalId": "[parameters('AzureMLService4_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService4_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService4_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMLService5')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService5_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService5_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "mlworkspace",
					"servicePrincipalId": "[parameters('AzureMLService5_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService5_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService5_properties_typeProperties_tenant')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DiyaInternalStroageByUsingAccountKey')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DiyaInternalStroageByUsingAccountKey_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cosmosdblink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('cosmosdblink_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/diyaintgenralstoragelink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('diyaintgenralstoragelink_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/notmanagedsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('notmanagedsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/notmanagedsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('notmanagedsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/restidentity')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('restidentity_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "AadServicePrincipal",
					"servicePrincipalId": "[parameters('restidentity_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('restidentity_servicePrincipalKey')]"
					},
					"tenant": "[parameters('restidentity_properties_typeProperties_tenant')]",
					"aadResourceId": "[parameters('restidentity_properties_typeProperties_aadResourceId')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testwithmah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('testwithmah_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/verifypermission')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('verifypermission_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('verifypermission_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime1')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tId as long,\n\t\tPaketId as long,\n\t\tEventcode as integer,\n\t\tTimestamp as string,\n\t\tSscc as string,\n\t\tEreignisFiliale as integer,\n\t\tEreignisFahrzeug as decimal(12,4),\n\t\tBenutzer as string,\n\t\tLatitude as decimal(7,5),\n\t\tLongitude as decimal(8,5),\n\t\tGeoCheck as string,\n\t\tAuslieferstatus as string,\n\t\tQuittungsgeber as string,\n\t\tRegalNr as string,\n\t\tRasterVon as string,\n\t\tRasterBis as string,\n\t\tLaenge as integer,\n\t\tBreite as integer,\n\t\tHoehe as integer,\n\t\tGewicht as decimal(20,3),\n\t\tStatusWaage as string,\n\t\tStatusScanner as string,\n\t\tStatusAllgemein as string,\n\t\tFahrzeugId as string,\n\t\tRegalTyp as integer,\n\t\tTourNr as long,\n\t\tTourDatum as string,\n\t\tPtsSyncedAt as string,\n\t\tAuftragId as long,\n\t\tBemerkungen as string,\n\t\tBoxBarcode as string,\n\t\tSignatureRefused as boolean,\n\t\tEventSource as string,\n\t\tStellplatz as string,\n\t\tCreatedAt as string,\n\t\tGrund as string,\n\t\tCrossdockingNr as string,\n\t\tBehaelterNr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 0,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [PassengerId]\n,[Pclass]\n,[Name]\n,[Sex]\n,[Age]\n,[SibSp]\n,[Parch]\n,[Ticket]\n,[Fare]\n,[Cabin]\n,[Embarked]\n FROM [default].[dbo].[sf_titanic]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [PassengerId]\n,[Pclass]\n,[Name]\n,[Sex]\n,[Age]\n,[SibSp]\n,[Parch]\n,[Ticket]\n,[Fare]\n,[Cabin]\n,[Embarked]\n FROM [sparkpool_db].[dbo].[sf_titanic]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT *\nFROM sys.dm_pdw_exec_requests\nWHERE status not in ('Completed','Failed','Cancelled')\n  AND session_id <> session_id()\nORDER BY submit_time DESC;\n\n\n\nSELECT * FROM sys.dm_pdw_request_steps\nWHERE row_count > 0\nORDER BY step_index;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "testpoolneruope",
						"databaseName": "testpoolneruope"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Monitor active queries\nSELECT *\nFROM sys.dm_pdw_exec_requests\nWHERE status not in ('Completed','Failed','Cancelled')\n  AND session_id <> session_id()\nORDER BY submit_time DESC;\n\n\n\nSELECT * FROM sys.dm_pdw_request_steps\nWHERE request_id = 'QID117685'\nORDER BY step_index;\n\nSELECT * FROM sys.dm_pdw_request_steps\nWHERE request_id = 'QID117738'\nORDER BY step_index;\n\nSELECT * FROM sys.dm_pdw_request_steps\nWHERE request_id = 'QID117770'\nORDER BY step_index;\n\nSELECT * FROM sys.dm_pdw_request_steps\nWHERE request_id = 'QID117861'\nORDER BY step_index;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "testpoolneruope",
						"databaseName": "testpoolneruope"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "smallpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b52e0335-cc92-47a1-b234-38bd35c2750d/resourceGroups/adwrg/providers/Microsoft.Synapse/workspaces/notmanagedsynapse/bigDataPools/smallpool",
						"name": "smallpool",
						"type": "Spark",
						"endpoint": "https://notmanagedsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/smallpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"spark.sql(\"CREATE DATABASE SparkPool_DB\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from typing import List"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"LAKE_PATH: str = \"abfss://cont01@diyastorageinternal.dfs.core.windows.net/parquet\"\r\n",
							"files: List[str] = [file_.path.split(\"/\")[-1] for file_ in mssparkutils.fs.ls(LAKE_PATH)]"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"files"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"tempdb = spark.read.format(\"parquet\").load(\"abfss://cont01@diyastorageinternal.dfs.core.windows.net/parquet/Titanic.snappy.parquet\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"tempdb"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"for file_ in files:\r\n",
							"    temp = (\r\n",
							"        spark\r\n",
							"        .read\r\n",
							"        .format(\"parquet\")\r\n",
							"        .load(f\"{LAKE_PATH}/{file_}\")\r\n",
							"    )\r\n",
							"    spark.sql(\r\n",
							"        f\"\"\"\r\n",
							"            CREATE TABLE SparkPool_DB.sf_Titanic \r\n",
							"            USING PARQUET LOCATION '{LAKE_PATH}/{file_}'\r\n",
							"        \"\"\"\r\n",
							"    )"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "smallpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b52e0335-cc92-47a1-b234-38bd35c2750d/resourceGroups/adwrg/providers/Microsoft.Synapse/workspaces/notmanagedsynapse/bigDataPools/smallpool",
						"name": "smallpool",
						"type": "Spark",
						"endpoint": "https://notmanagedsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/smallpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"Credentials.Help()"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "csharp"
							},
							"collapsed": true
						},
						"source": [
							"%%csharp\r\n",
							"\r\n",
							"var token = Credentials.GetToken(\"Synapse\");"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "csharp"
							},
							"collapsed": true
						},
						"source": [
							"%%csharp\r\n",
							"\r\n",
							"Credentials.IsValidToken(token)"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "csharp"
							},
							"collapsed": true
						},
						"source": [
							"%%csharp\r\n",
							"\r\n",
							"// Credentials.GetSecret(\"azure key vault name\",\"secret name\",\"linked service name\")\r\n",
							"// \"AzureKeyVault3\"\r\n",
							"Credentials.GetSecret(\"diyastoragekeyvault\",\"diyastorageinternalkey\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"mssparkutils.credentials.help()"
						],
						"outputs": [],
						"execution_count": 71
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"var tokenScala = mssparkutils.credentials.getToken(\"Synapse\")"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"mssparkutils.credentials.isValidToken(tokenScala)"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"mssparkutils.credentials.getSecret(\"diyastoragekeyvault\",\"diyastorageinternalkey\",\"AzureKeyVault2\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2_Copy1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "smallpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_sparkdotnet",
						"display_name": "csharp"
					},
					"language_info": {
						"name": "csharp"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/b52e0335-cc92-47a1-b234-38bd35c2750d/resourceGroups/adwrg/providers/Microsoft.Synapse/workspaces/notmanagedsynapse/bigDataPools/smallpool",
						"name": "smallpool",
						"type": "Spark",
						"endpoint": "https://notmanagedsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/smallpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"// Credentials.GetSecret(\"azure key vault name\",\"secret name\",\"linked service name\")\r\n",
							"Credentials.GetSecret(\"diyastoragekeyvault\",\"diyastorageinternalkey\",\"AzureKeyVault2\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"Credentials.Help()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"Credentials.GetConnectionStringOrCreds(\"AzureKeyVault2\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "scala"
							},
							"collapsed": true
						},
						"source": [
							"%%spark\r\n",
							"import com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
							"\r\n",
							"val secret = TokenLibrary.getSecret(\"diyastoragekeyvault\",\"diyastorageinternalkey\",\"AzureKeyVault2\");\r\n",
							"\r\n",
							"print(secret)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "csharp"
							},
							"collapsed": true
						},
						"source": [
							"%%csharp\r\n",
							"\r\n",
							"var token = Credentials.GetToken(\"Synapse\");"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"token"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "csharp"
							},
							"collapsed": true
						},
						"source": [
							"%%csharp\r\n",
							"\r\n",
							"Credentials.IsValidToken(token)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBIPool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "northeurope"
		}
	]
}